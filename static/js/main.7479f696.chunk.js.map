{"version":3,"sources":["assets/final-bumper.mp3","assets/bg.mp3","assets/bumper.mp3","assets/chazia.png","store.js","video.js","answer.js","text-question.js","image-question.js","stats.js","timer-bar.js","question-board.js","game.js","splash-screen.js","start-screen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","store","_this","this","axios","get","then","res","questions","data","playerCount","length","Math","floor","random","id","pickedAnswer","playButtonPressed","startQuiz","amount","timer","timerTotal","startTimer","_this2","setTimeout","timerDone","started","playingTimerDone","_this3","showImage","setTimer","answers","nextQuestion","showAnswers","currentQuestion","right_answer","questionsWrong","audioFile","finalBumper","losers","newPlayers","perItem","isCountingDownPlayers","countDownLosers","_this4","bg","finishQuiz","undefined","image","finished","splashscreen","observable","bumper","action","react_default","a","createElement","className","src","Chazia","Component","Answer","observer","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","concat","question","answer","onClick","setAnswer","QuestionBoard","answer_Answer","answer_1","answer_2","answer_3","ImageQuestion","Stats","_","require","TimerBar","renderBar","bar","times","index","push","stillPlaying","String","price","toFixed","replace","out","stats_Stats","timer_bar_TimerBar","image_question_ImageQuestion","text_question_QuestionBoard","Game","video_default","question_board_QuestionBoard","SplashScreen","Timer","splash_screen_SplashScreen","setPlayButton","App","fetchQuestions","autoPlay","game_Game","start_screen_Timer","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7479f696.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/final-bumper.a3fff201.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bg.69d1d5ec.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bumper.d9b7ec7a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/chazia.379dda2d.png\";","import { action, observable } from 'mobx'\nimport axios from 'axios'\nimport bg from './assets/bg.mp3'\nimport bumper from './assets/bumper.mp3'\nimport finalBumper from './assets/final-bumper.mp3'\n\nclass Store {\n  @observable questions = []\n  @observable playerCount = 0\n  @observable currentQuestion = -1\n  @observable questionsWrong = 0\n  @observable timer = 100\n  @observable timerTotal = 100\n  @observable started = false\n  @observable showImage = false\n  @observable pickedAnswer = -1\n  @observable showAnswers = false\n  @observable audioFile = bumper\n  @observable playButtonPressed = false\n  @observable price = 5000\n  @observable splashscreen = false\n  @observable isCountingDownPlayers = false\n\n  @action fetchQuestions() {\n    axios.get('https://www.liquid-paint.nl/quiz.json').then((res) => {\n      this.questions = res.data\n      this.playerCount = res.data.length * 2000 + (Math.floor(Math.random() * 500) + 200)\n    })\n  }\n\n  @action setAnswer(id) {\n    this.pickedAnswer = id\n  }\n\n  setPlayButton() {\n    this.playButtonPressed = true\n    this.startQuiz()\n  }\n\n  setTimer(amount) {\n    this.timer = amount * 25\n    this.timerTotal = amount * 25\n    this.startTimer()\n  }\n\n  startTimer() {\n    setTimeout(() => {\n      this.timer -= 1\n\n      if (this.timer == 0) {\n        this.timerDone()\n      } else {\n        this.startTimer()\n      }\n    }, 30)\n  }\n\n  timerDone() {\n    if (this.started) {\n      this.playingTimerDone()\n    } else {\n      this.startQuiz()\n    }\n  }\n\n  playingTimerDone() {\n    if (this.showImage) {\n      this.showImage = false\n      this.setTimer(10)\n    } else {\n      this.answers()\n      setTimeout(() => {\n        this.nextQuestion()\n      }, 5000)\n    }\n  }\n\n  answers() {\n    this.showAnswers = true\n    if (this.pickedAnswer !== this.questions[this.currentQuestion].right_answer) {\n      this.questionsWrong += 1\n    }\n    if ((this.questions.length) == this.currentQuestion + 1) {\n      this.audioFile = finalBumper\n    }\n    var losers = Math.floor(Math.random() * 2000) + 1000\n    var newPlayers = this.playerCount - losers\n    var perItem = Math.floor(losers / 200)\n    this.isCountingDownPlayers = true\n    this.countDownLosers(perItem, newPlayers)\n  }\n\n  countDownLosers(perItem, newPlayers) {\n    setTimeout(() => {\n      this.playerCount -= perItem\n      if (this.playerCount > newPlayers) {\n        this.countDownLosers(perItem, newPlayers)\n      } else {\n        this.isCountingDownPlayers = false\n      }\n    }, 5)\n  }\n\n  startQuiz() {\n    this.started = true\n    this.audioFile = bg\n    this.nextQuestion()\n  }\n\n  nextQuestion() {\n    this.showAnswers = false\n    this.pickedAnswer = -1\n    if ((this.questions.length) == this.currentQuestion + 1) {\n      this.finishQuiz()\n    } else {\n      this.currentQuestion += 1\n      if (this.questions[this.currentQuestion].image != undefined) {\n        this.showImage = true\n        this.setTimer(7)\n      } else {\n        this.setTimer(10)\n      }\n    }\n  }\n\n  finishQuiz() {\n    this.audioFile = finalBumper\n    this.finished = true\n    this.started = false\n    this.splashscreen = true\n  }\n}\n\nconst store = new Store();\nexport default store;\n","import React, { Component } from 'react';\nimport Chazia from './assets/chazia.png'\n\nexport default class extends Component {\n  render() {\n    return(\n      <div className=\"video\">\n        <img src={Chazia} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport store from './store'\nimport { observer } from 'mobx-react'\n\nexport default @observer class Answer extends Component {\n  constructor(props) {\n    super(props)\n\n    this.store = store\n  }\n\n  render() {\n    if (this.store.showAnswers) {\n      return(\n        <div className={`answer answer-done ${this.props.id == this.props.question.right_answer ? 'right-answer' : 'wrong-answer'} ${this.store.pickedAnswer == this.props.id && this.props.id != this.props.question.right_answer ? 'own-wrong' : ''} ${this.props.question.right_answer == this.props.id ? 'own-right' : ''}`}>\n          <h3>{this.props.answer}</h3>\n        </div>\n      )\n    } else {\n      return(\n        <div className={`answer ${this.props.id === this.store.pickedAnswer ? 'answer-checked' : ''}`} onClick={() => { this.store.setAnswer(this.props.id)}}>\n          <h3>{this.props.answer}</h3>\n        </div>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react'\nimport store from './store'\nimport Answer from './answer'\nimport TextQuestion from './text-question'\n\nexport default @observer class QuestionBoard extends Component {\n  constructor(props) {\n    super(props)\n    this.store = store\n  }\n\n  render() {\n    const question = this.store.questions[this.store.currentQuestion]\n    return(\n      <div className=\"text-question\">\n        <h2>{question.question}</h2>\n        <Answer answer={question.answer_1} id={1} question={question} />\n        <Answer answer={question.answer_2} id={2} question={question} />\n        <Answer answer={question.answer_3} id={3} question={question} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react'\nimport store from './store'\nimport Answer from './answer'\n\nexport default @observer class ImageQuestion extends Component {\n  constructor(props) {\n    super(props)\n    this.store = store\n  }\n\n  render() {\n    const question = this.store.questions[this.store.currentQuestion]\n    return(\n      <div className=\"image-question\">\n        <h2>Let op deze afbeelding</h2>\n        <img src={question.image} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react'\nimport store from './store'\n\nexport default @observer class Stats extends Component {\n  constructor(props) {\n    super(props)\n    this.store = store\n  }\n\n  render() {\n    return(\n      <div className=\"stats\">\n        <p>Vraag {this.store.currentQuestion + 1}/{this.store.questions.length}</p>\n        <p className={`player-amount ${this.store.isCountingDownPlayers ? 'is-counting-down-players' : ''}`}>{this.store.playerCount} spelers over</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport store from './store'\nimport { observer } from 'mobx-react'\nvar _ = require('lodash');\n\nexport default @observer class TimerBar extends Component {\n  constructor(props) {\n    super(props)\n    this.store = store\n  }\n\n  renderBar = () => {\n    var bar = []\n    _.times((this.store.timerTotal * 10), (index) => {\n      bar.push(<span className={`timer-bar-item ${(this.store.timer * 10) > index ? 'timer-bar-item-green' : 'timer-bar-item-red'}`}></span>);\n    });\n    return bar\n  }\n\n  render() {\n    return(\n      <div className=\"timer-bar\">\n        {this.renderBar()}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react'\nimport store from './store'\nimport Answer from './answer'\nimport TextQuestion from './text-question'\nimport ImageQuestion from './image-question'\nimport Stats from './stats'\nimport TimerBar from './timer-bar'\n\nexport default @observer class QuestionBoard extends Component {\n  constructor(props) {\n    super(props)\n    this.store = store\n  }\n\n  stillPlaying = () => {\n    return <div className=\"game-status\">Je speelt nog mee voor €{String((this.store.price / this.store.playerCount).toFixed(2)).replace(\".\", \",\")} per winnaar.</div>\n  }\n\n  out = () => {\n    return <div className=\"game-status\">Je bent afgevallen. Je kan niet meer winnen.</div>\n  }\n\n  render() {\n    const question = this.store.questions[this.store.currentQuestion]\n    if (question) {\n      return(\n        <div className=\"question-board\">\n          <Stats />\n          <TimerBar />\n          {this.store.showImage ? <ImageQuestion /> : <TextQuestion />}\n          {\n            this.store.questionsWrong == 0 ? this.stillPlaying() : this.out()\n          }\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport Video from './video.js'\nimport QuestionBoard from './question-board.js'\n\nexport default class Game extends Component {\n  render() {\n    return(\n      <div className=\"game\">\n        <Video />\n        <QuestionBoard />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport store from './store'\nimport { observer } from 'mobx-react'\n\nexport default @observer class SplashScreen extends Component {\n  constructor(props) {\n    super(props)\n    this.store = store\n  }\n\n  render() {\n    return(\n      <div className=\"splashscreen\">\n        <p>Aantal vragen goed: {this.store.questions.length - this.store.questionsWrong}</p>\n        <p>Gewonnen geldbedrag: €{this.store.questionsWrong === 0 ? String((this.store.price / this.store.playerCount).toFixed(2)).replace(\".\", \",\") : \"0\"}</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport store from './store'\nimport { observer } from 'mobx-react'\nimport SplashScreen from './splash-screen'\n\nexport default @observer class Timer extends Component {\n  constructor(props) {\n    super(props)\n    this.store = store\n  }\n\n  render() {\n    return(\n      <div className=\"timer\">\n        <h2>De Zwakste Schakel</h2>\n        {!this.store.splashscreen && <p className=\"timer-bg\">€5000</p>}\n        {this.store.splashscreen ? <SplashScreen /> : <button onClick={() => {this.store.setPlayButton()}}>Start de klok</button>}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport store from './store'\nimport './App.css';\nimport { observer } from 'mobx-react'\nimport Game from './game'\nimport StartScreen from './start-screen'\n\nexport default @observer class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.store = store\n  }\n\n  componentDidMount() {\n    this.store.fetchQuestions()\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <audio src={this.store.audioFile} autoPlay />\n        <div className=\"app-container\">\n          {this.store.started ? <Game /> : <StartScreen />}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}